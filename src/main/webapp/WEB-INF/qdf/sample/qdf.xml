<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE queryset PUBLIC "-//HP Software Professional Service//DTD Query Configuration 1.0//EN"
        "qdf.dtd">
<!--
********************************************************************************
CODING CONVENTIONS 编码规范
==========================
1. query name 只能包含大写字母、数字、下划线
2. query name 命名规则：<前缀>_<查询对象>_<查询内容>_[结果类型]_[查询条件]
*     <前缀>: 以namespace的简称为前缀，例如"WIN"、"RS6K"、"PLAT"、"COM" 不超过4个字母
*  <查询对象>: 查询的主要对象，例如SERVER（服务器）、AUDIT（审计）、USER（用户）
*  <查询内容>: 查询对象的内容
*  [结果类型]: 相同的查询对象和内容，SUM/COUNT、LIST、DETAIL 构成三级主从结构
        SUM - 概要信息，一般包含2~5个字段，用户的第一入口，一般用于Tab显示
       LIST - 列表信息，包含5~10个字段，用户通过SUM进入，一般用于Table或Grid显示
     DETAIL - 详细信息，包含5~20个字段，用户点击LIST某项进入，一般用Form显示
*  [查询条件]：说明查询的依据，例如BY_DATE, BY_RULE, BY_STATUS
3. SQL语句中表的别名，采用表名的各个单词首写字母。
   例如SAS_SERVERS别名为ss，SAS_USER_GROUPS别名为sug，不得采用a，b，c等无意义的别名。

CHANGE LOG 变更记录
==========================
@2012/06/21, Leo Liao, created
********************************************************************************
-->
<queryset>
    <query name="STOCK_QUOTE_LIST">
        <description>Quote simple list</description>
        <sql><![CDATA[
            SELECT
                DATE_FORMAT(date, '%Y-%m-%d') AS date,
                open,
                close,
                high,
                low,
                symbol,
                volume
            FROM STOCK_QUOTE
            LIMIT 100
            ]]>
        </sql>
    </query>
    <query name="STOCK_QUOTE_WEEKLY">
        <description>Weekly quote</description>
        <sql><![CDATA[
            SELECT
                DATE_FORMAT(date, '%Y-%m-%d') AS date,
                open,
                close,
                high,
                low,
                symbol,
                volume
            FROM STOCK_QUOTE
            WHERE DAYOFMONTH(date) = 1
            ORDER BY date ASC
            ]]>
        </sql>
    </query>
    <query name="STOCK_GROUP_BY_PE">
        <description>Count stock group by PE ratio</description>
        <sql><![CDATA[
            SELECT
                t.pe_ratio AS pe_range,
                count(*)   AS stock_count
            FROM (
                     SELECT
                         CASE
                         WHEN pe_ratio < 0 THEN '-0'
                         WHEN pe_ratio BETWEEN 0 AND 9 THEN '0-9'
                         WHEN pe_ratio BETWEEN 10 AND 19 THEN '10-19'
                         WHEN pe_ratio BETWEEN 20 AND 39 THEN '20-39'
                         ELSE '40+' END AS pe_ratio
                     FROM stock) t
            GROUP BY t.pe_ratio
            ]]>
    </sql>
    </query>
    <query name="STOCK_QUOTE_UPDOWN_COUNT">
        <description>Compare up and down</description>
        <sql><![CDATA[
            SELECT
                'up'     AS up_or_down,
                symbol,
                count(1) AS amount
            FROM stock_quote
            WHERE close > open
            GROUP BY symbol
            UNION SELECT
                      'down'   AS up_or_down,
                      symbol,
                      count(1) AS amount
                  FROM stock_quote
                  WHERE close < open
                  GROUP BY symbol
            UNION SELECT
                      'even'   AS up_or_down,
                      symbol,
                      count(1) AS amount
                  FROM stock_quote
                  WHERE close = open
                  GROUP BY symbol
            ]]>
        </sql>
    </query>
    <query name="STOCK_QUOTE_FULL_LIST">
        <description>Get all stock quote with fuzzy search feature</description>
        <fuzzySearch>date,open,close,high,low,symbol, volume</fuzzySearch>
        <sql><![CDATA[
            SELECT
                DATE_FORMAT(date, '%Y-%m-%d') AS date,
                open,
                close,
                high,
                low,
                symbol,
                volume
            FROM STOCK_QUOTE
            WHERE ((:FUZZY_SEARCH))
            ]]>
        </sql>
    </query>
</queryset>
